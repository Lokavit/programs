.stage {
  /*
        Fixes a few extra pixels of margin/padding, that adds on to the bottom
        of the element, which messes up the chrome padding consistency
    */
  display: block;

  border-radius: 0.5rem;
  border: 0.0625rem solid hsla(0, 0%, 0%, 0.15);
  overflow: hidden;

  /* @todo: This is for overriding the value being set somewhere. Where is it being set? */
  background-color: transparent;

  /* Allow custom touch handling to prevent scrolling on Edge */
  touch-action: none;

  /* Make sure border is not included in size calculation */
  box-sizing: content-box !important;
}

.color-picker {
  position: absolute;
  border-radius: 100%;
  border: 4px solid hsla(0, 0%, 0%, 0.15);
}

.with-color-picker {
  cursor: none;
  z-index: 2010;
}

.color-picker-background {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.55);
  display: block;
  z-index: 2000;
  top: 0;
  left: 0;
}

.stage-wrapper {
  position: relative;
}

.stage-wrapper-overlay {
  position: fixed;
  top: 2.5rem;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 5000;
  background-color: hsla(0, 100%, 100%, 1);
  /* spacing between stage and control bar (on the top), or between
    stage and window edges (on left/right/bottom) */
  padding: 0.1875rem;
}

/* wraps only main content of overlay player, not monitors */
.stage-overlay-content {
  outline: none;
  margin: auto;
  border: 0.1875rem solid rgb(126, 133, 151);
  padding: 0;
  border-radius: 0.5rem;

  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

.stage-overlay-content-border-override {
  border: none;
}

/* adjust monitors when stage is standard size:
shift them down and right to compensate for the stage's border */
.stage-wrapper .monitor-wrapper {
  top: 0.0625rem;
  left: 0.0625rem;
  width: calc(100% - 0.0625rem);
}

/* adjust monitors when stage is full screen:
.stage-wrapper-overlay uses position: fixed instead of relative, so we need
to adjust for the border using a different method */
.stage-wrapper-overlay .monitor-wrapper {
  padding-top: calc(0.1875rem + 0.1875rem);
  padding-bottom: calc(0.1875rem + 0.1875rem);
}

.monitor-wrapper,
.color-picker-wrapper,
.frame-wrapper,
.green-flag-overlay-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  overflow: hidden;
}

.dragging-sprite {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1020;
  filter: drop-shadow(5px 5px 5px hsla(0, 0%, 0%, 0.15));
}

.stage-bottom-wrapper {
  position: absolute;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  top: 0;
  overflow: hidden;
  pointer-events: none;
}

.mic-indicator {
  transform-origin: bottom right;
  z-index: 45;
  pointer-events: none;
  align-self: flex-end;
}

.question-wrapper {
  z-index: 49;
  pointer-events: auto;
}

.frame {
  box-sizing: content-box !important;
  background: hsla(25, 100%, 65%, 0.35);
  border: 2px solid #ff8800;
  border-radius: 0.5rem;
  animation-name: flash;
  animation-duration: 0.75s;
  animation-fill-mode: forwards; /* Leave at 0 opacity after animation */
}

.green-flag-overlay-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  background: rgba(0, 0, 0, 0.25);
  border-radius: 0.5rem;
  pointer-events: all;
  cursor: pointer;
}

@keyframes flash {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}


.monitor-list {
  /* Width/height are set by the component, margin: auto centers in fullscreen */
  margin: auto;
  pointer-events: none;
  overflow: hidden;
}

.monitor-list-scaler {
  /* Scaling for monitors should happen from the top left */
  transform-origin: left top;
}

::-ms-clear { display: none; }